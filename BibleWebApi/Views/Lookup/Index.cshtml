@using BibleCore.Service.Data
@using BibleWebApi.Models
@model LookupModel
@{
    ViewData["Title"] = "Lookup";
}
<h2>Lookup</h2>
<div>
    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert alert-primary" role="alert">
            @Model.Message
        </div>        
    }
    @using (Html.BeginForm("Update", "Lookup", FormMethod.Post,new { @class="mb-4", style="width: 25rem" }))
    {
        <fieldset>
            <div class="row mb-3">
                <label for="strongs" class="col-5 col-form-label">Strong's number:</label>
                <div class="col-7">
                    <div class="input-group">
                        <span class="input-group-text">G</span>
                        <input id="strongs" type="text" name="Strongs" class="form-control" value="@Model.Strongs" />
                    </div>
                </div>
            </div>
            <input type="submit" value="Submit" class="btn btn-primary submit" />
        </fieldset>
    }
    @if (Model.LexemeData != null)
    {
        LexemeData lexemeData = Model.LexemeData;

        <div class="card">
            <h3 class="card-header text-center" style="font-family: 'Times New Roman', Times, serif">
                @lexemeData.Lemma (@lexemeData.LemmaTransliteration)
            </h3>
            <div class="card-body row">
                <div class="col">
                    @if (!string.IsNullOrEmpty(lexemeData.FullCitationForm))
                    {
                        <h5 class="card-text" style="font-family: 'Times New Roman', Times, serif">@Model.LexemeData?.FullCitationForm</h5>
                    }
                    <p class="card-text">@lexemeData.Gloss</p>
                </div>
                <div class="col">
                    <p class="card-text">Part of speech: @lexemeData.PartOfSpeech</p>
                    <p class="card-text">@($"Strong's number: G{string.Join(',', lexemeData.Strongs.Select(s => s.ToString()).ToArray())}")</p>
                    <p class="card-text">@($"GK number: GK{string.Join(',', lexemeData.Gk.Select(s => s.ToString()).ToArray())}")</p>
                </div>
            </div>
            @foreach(var form in lexemeData.Forms)
            {
                <hr class="m-0 p-0"/>
                <div class="card-body row ">
                    <div class="card-text col-12 col-md-4">
                        <h5 style="font-family: 'Times New Roman', Times, serif"><span class="@(form.Prefix=="*" ? "text-bg-danger" : "text-bg-info")">@form.Prefix</span>@form.Core<span class="@(form.Suffix=="*" ? "text-bg-danger" : "text-bg-info")">@form.Suffix</span></h5>
                        <p>
                            @form.Inflection.Tense
                            @form.Inflection.Voice
                            @form.Inflection.Mood
                            |
                            @form.Inflection.Case
                            @form.Inflection.Person
                            @form.Inflection.Number
                            @form.Inflection.Gender
                            @form.Inflection.Degree
                        </p>
                    </div>
                    <div class="col">
                        <div class="row">
                        @foreach (var bookmark in form.Bookmarks)
                        {
                            <a asp-controller="Browse" asp-action="Index" asp-route-id="@bookmark.FormattedBook" class="link-underline link-dark link-underline-opacity-0 link-underline-opacity-100-hover col-4 col-lg-2 text-nowrap">@bookmark.FormattedBookmark</a>
                        }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>